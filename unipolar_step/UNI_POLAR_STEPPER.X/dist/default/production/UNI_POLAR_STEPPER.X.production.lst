

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 25 19:21:20 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x4E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F84A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0088                     	;# 
    64  0089                     	;# 
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0088                     	;# 
    80  0089                     	;# 
    81                           
    82                           	psect	idataBANK0
    83  0387                     __pidataBANK0:
    84                           
    85                           ;initializer for _dizi
    86  0387  3409               	retlw	9
    87  0388  3400               	retlw	0
    88  0389  340D               	retlw	13
    89  038A  3400               	retlw	0
    90  038B  340C               	retlw	12
    91  038C  3400               	retlw	0
    92  038D  340E               	retlw	14
    93  038E  3400               	retlw	0
    94  038F  3406               	retlw	6
    95  0390  3400               	retlw	0
    96  0391  3407               	retlw	7
    97  0392  3400               	retlw	0
    98  0393  3403               	retlw	3
    99  0394  3400               	retlw	0
   100  0395  340B               	retlw	11
   101  0396  3400               	retlw	0
   102  0006                     _PORTB	set	6
   103  0028                     _RA0	set	40
   104  0086                     _TRISB	set	134
   105  0085                     _TRISA	set	133
   106                           
   107                           	psect	cinit
   108  03DC                     start_initialization:	
   109                           ; #config settings
   110                           
   111  03DC                     __initialization:
   112                           
   113                           ; Initialize objects allocated to BANK0
   114  03DC  2387               	fcall	__pidataBANK0	;fetch initializer
   115  03DD  008C               	movwf	__pdataBANK0& (0+127)
   116  03DE  2388               	fcall	__pidataBANK0+1	;fetch initializer
   117  03DF  008D               	movwf	(__pdataBANK0+1)& (0+127)
   118  03E0  2389               	fcall	__pidataBANK0+2	;fetch initializer
   119  03E1  008E               	movwf	(__pdataBANK0+2)& (0+127)
   120  03E2  238A               	fcall	__pidataBANK0+3	;fetch initializer
   121  03E3  008F               	movwf	(__pdataBANK0+3)& (0+127)
   122  03E4  238B               	fcall	__pidataBANK0+4	;fetch initializer
   123  03E5  0090               	movwf	(__pdataBANK0+4)& (0+127)
   124  03E6  238C               	fcall	__pidataBANK0+5	;fetch initializer
   125  03E7  0091               	movwf	(__pdataBANK0+5)& (0+127)
   126  03E8  238D               	fcall	__pidataBANK0+6	;fetch initializer
   127  03E9  0092               	movwf	(__pdataBANK0+6)& (0+127)
   128  03EA  238E               	fcall	__pidataBANK0+7	;fetch initializer
   129  03EB  0093               	movwf	(__pdataBANK0+7)& (0+127)
   130  03EC  238F               	fcall	__pidataBANK0+8	;fetch initializer
   131  03ED  0094               	movwf	(__pdataBANK0+8)& (0+127)
   132  03EE  2390               	fcall	__pidataBANK0+9	;fetch initializer
   133  03EF  0095               	movwf	(__pdataBANK0+9)& (0+127)
   134  03F0  2391               	fcall	__pidataBANK0+10	;fetch initializer
   135  03F1  0096               	movwf	(__pdataBANK0+10)& (0+127)
   136  03F2  2392               	fcall	__pidataBANK0+11	;fetch initializer
   137  03F3  0097               	movwf	(__pdataBANK0+11)& (0+127)
   138  03F4  2393               	fcall	__pidataBANK0+12	;fetch initializer
   139  03F5  0098               	movwf	(__pdataBANK0+12)& (0+127)
   140  03F6  2394               	fcall	__pidataBANK0+13	;fetch initializer
   141  03F7  0099               	movwf	(__pdataBANK0+13)& (0+127)
   142  03F8  2395               	fcall	__pidataBANK0+14	;fetch initializer
   143  03F9  009A               	movwf	(__pdataBANK0+14)& (0+127)
   144  03FA  2396               	fcall	__pidataBANK0+15	;fetch initializer
   145  03FB  009B               	movwf	(__pdataBANK0+15)& (0+127)
   146                           
   147                           ; Clear objects allocated to BANK0
   148  03FC  019F               	clrf	__pbssBANK0& (0+127)
   149  03FD  01A0               	clrf	(__pbssBANK0+1)& (0+127)
   150  03FE                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  03FE                     __end_of__initialization:
   154  03FE  0183               	clrf	3
   155  03FF  2B97               	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	bssBANK0
   158  001F                     __pbssBANK0:
   159  001F                     _i:
   160  001F                     	ds	2
   161                           
   162                           	psect	dataBANK0
   163  000C                     __pdataBANK0:
   164  000C                     _dizi:
   165  000C                     	ds	16
   166                           
   167                           	psect	cstackBANK0
   168  001C                     __pcstackBANK0:
   169  001C                     ?_main:
   170  001C                     ??_main:	
   171                           ; 1 bytes @ 0x0
   172                           
   173                           
   174                           ; 1 bytes @ 0x0
   175  001C                     	ds	3
   176                           
   177                           	psect	maintext
   178  0397                     __pmaintext:	
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   181 ;;
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 18 in file "stepper.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   193 ;; Tracked objects:
   194 ;;		On entry : B00/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMMON   BANK0
   198 ;;      Params:         0       0
   199 ;;      Locals:         0       0
   200 ;;      Temps:          0       3
   201 ;;      Totals:         0       3
   202 ;;Total ram usage:        3 bytes
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210  0397                     _main:	
   211                           ;psect for function _main
   212                           
   213  0397                     l638:	
   214                           ;incstack = 0
   215                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   216                           
   217                           
   218                           ;stepper.c: 20:         else {
   219  0397  3001               	movlw	1
   220  0398  1683               	bsf	3,5	;RP0=1, select bank1
   221  0399  0085               	movwf	5	;volatile
   222  039A                     l640:
   223                           
   224                           ;stepper.c: 21:             if(i==0){i=8;}
   225  039A  0186               	clrf	6	;volatile
   226  039B                     l642:
   227                           
   228                           ;stepper.c: 22:             i--;
   229  039B  1283               	bcf	3,5	;RP0=0, select bank0
   230  039C  019F               	clrf	_i
   231  039D  01A0               	clrf	_i+1
   232  039E                     l644:
   233                           
   234                           ;stepper.c: 24: ;stepper.c: 25: 
   235  039E  081F               	movf	_i,w
   236  039F  009C               	movwf	??_main
   237  03A0  071C               	addwf	??_main,w
   238  03A1  3E0C               	addlw	(low (_dizi| 0))& (0+255)
   239  03A2  0084               	movwf	4
   240  03A3  1383               	bcf	3,7	;select IRP bank0
   241  03A4  0800               	movf	0,w
   242  03A5  0086               	movwf	6	;volatile
   243  03A6                     l646:
   244                           
   245                           ;stepper.c: 26: 
   246  03A6  300B               	movlw	11
   247  03A7  009E               	movwf	??_main+2
   248  03A8  3026               	movlw	38
   249  03A9  009D               	movwf	??_main+1
   250  03AA  305D               	movlw	93
   251  03AB  009C               	movwf	??_main
   252  03AC                     u77:
   253  03AC  0B9C               	decfsz	??_main,f
   254  03AD  2BAC               	goto	u77
   255  03AE  0B9D               	decfsz	??_main+1,f
   256  03AF  2BAC               	goto	u77
   257  03B0  0B9E               	decfsz	??_main+2,f
   258  03B1  2BAC               	goto	u77
   259  03B2  2BB3               	nop2
   260  03B3                     l648:
   261                           
   262                           ;stepper.c: 27: 
   263  03B3  1283               	bcf	3,5	;RP0=0, select bank0
   264  03B4  1805               	btfsc	5,0	;volatile
   265  03B5  2BB7               	goto	u41
   266  03B6  2BB8               	goto	u40
   267  03B7                     u41:
   268  03B7  2BCA               	goto	l654
   269  03B8                     u40:
   270  03B8                     l650:
   271                           
   272                           ;stepper.c: 28: 
   273  03B8  3007               	movlw	7
   274  03B9  061F               	xorwf	_i,w
   275  03BA  0420               	iorwf	_i+1,w
   276  03BB  1D03               	btfss	3,2
   277  03BC  2BBE               	goto	u51
   278  03BD  2BBF               	goto	u50
   279  03BE                     u51:
   280  03BE  2BC3               	goto	l21
   281  03BF                     u50:
   282  03BF                     l652:
   283                           
   284                           ;stepper.c: 29: 
   285  03BF  30FF               	movlw	255
   286  03C0  009F               	movwf	_i
   287  03C1  30FF               	movlw	255
   288  03C2  00A0               	movwf	_i+1
   289  03C3                     l21:	
   290                           ;stepper.c: 30:     }
   291                           
   292                           
   293                           ;stepper.c: 31: 
   294  03C3  3001               	movlw	1
   295  03C4  079F               	addwf	_i,f
   296  03C5  1803               	skipnc
   297  03C6  0AA0               	incf	_i+1,f
   298  03C7  3000               	movlw	0
   299  03C8  07A0               	addwf	_i+1,f
   300  03C9  2B9E               	goto	l644
   301  03CA                     l654:
   302  03CA  081F               	movf	_i,w
   303  03CB  0420               	iorwf	_i+1,w
   304  03CC  1D03               	btfss	3,2
   305  03CD  2BCF               	goto	u61
   306  03CE  2BD0               	goto	u60
   307  03CF                     u61:
   308  03CF  2BD4               	goto	l23
   309  03D0                     u60:
   310  03D0                     l656:
   311  03D0  3008               	movlw	8
   312  03D1  009F               	movwf	_i
   313  03D2  3000               	movlw	0
   314  03D3  00A0               	movwf	_i+1
   315  03D4                     l23:
   316  03D4  30FF               	movlw	255
   317  03D5  079F               	addwf	_i,f
   318  03D6  1803               	skipnc
   319  03D7  0AA0               	incf	_i+1,f
   320  03D8  30FF               	movlw	255
   321  03D9  07A0               	addwf	_i+1,f
   322  03DA  2B9E               	goto	l644
   323  03DB  2800               	ljmp	start
   324  03DC                     __end_of_main:
   325  004E                     btemp	set	78	;btemp
   326  004E                     wtemp0	set	78
   327                           
   328                           	psect	idloc
   329                           
   330                           ;Config register IDLOC0 @ 0x2000
   331                           ;	unspecified, using default values
   332  2000                     	org	8192
   333  2000  3FFF               	dw	16383
   334                           
   335                           ;Config register IDLOC1 @ 0x2001
   336                           ;	unspecified, using default values
   337  2001                     	org	8193
   338  2001  3FFF               	dw	16383
   339                           
   340                           ;Config register IDLOC2 @ 0x2002
   341                           ;	unspecified, using default values
   342  2002                     	org	8194
   343  2002  3FFF               	dw	16383
   344                           
   345                           ;Config register IDLOC3 @ 0x2003
   346                           ;	unspecified, using default values
   347  2003                     	org	8195
   348  2003  3FFF               	dw	16383
   349                           
   350                           	psect	config
   351                           
   352                           ;Config register CONFIG @ 0x2007
   353                           ;	Oscillator Selection bits
   354                           ;	FOSC = XT, XT oscillator
   355                           ;	Watchdog Timer
   356                           ;	WDTE = OFF, WDT disabled
   357                           ;	Power-up Timer Enable bit
   358                           ;	PWRTE = OFF, Power-up Timer is disabled
   359                           ;	Code Protection bit
   360                           ;	CP = OFF, Code protection disabled
   361  2007                     	org	8199
   362  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      3      21

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      3      15       3       31.8%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15       6        0.0%
ABS                  0      0      15       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 25 19:21:20 2023

                      _i 001F                       l21 03C3                       l23 03D4  
                     u40 03B8                       u41 03B7                       u50 03BF  
                     u51 03BE                       u60 03D0                       u61 03CF  
                     u77 03AC                      l640 039A                      l650 03B8  
                    l642 039B                      l652 03BF                      l644 039E  
                    l654 03CA                      l646 03A6                      l638 0397  
                    l656 03D0                      l648 03B3                      _RA0 0028  
                    fsr0 0004                      indf 0000                     _dizi 000C  
                   _main 0397                     btemp 004E                     start 0000  
                  ?_main 001C                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    status 0003                    wtemp0 004E  
        __initialization 03DC             __end_of_main 03DC                   ??_main 001C  
__end_of__initialization 03FE             __pidataBANK0 0387               __pbssBANK0 001F  
             __pmaintext 0397     end_of_initialization 03FE      start_initialization 03DC  
            __pdataBANK0 000C                ___latbits 0000            __pcstackBANK0 001C  
